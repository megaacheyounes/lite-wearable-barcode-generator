/**
 * Code 128C Barcode generation library for Huawei LiteWearable watches
 * {@link https://github.com/megaacheyounes/lite-wearable-barcode-generator Github}
 *
 * Version 0.1.0 (jan 2025)
 */
function generateCode128CBarcode(_){let $=["11011001100","11001101100","11001100110","10010011000","10010001100","10001001100","10011001000","10011000100","10001100100","11001001000","11001000100","11000100100","10110011100","10011011100","10011001110","10111001100","10011101100","10011100110","11001110010","11001011100","11001001110","11011100100","11001110100","11101101110","11101001100","11100101100","11100100110","11101100100","11100110100","11100110010","11011011000","11011000110","11000110110","10100011000","10001011000","10001000110","10110001000","10001101000","10001100010","11010001000","11000101000","11000100010","10110111000","10110001110","10001101110","10111011000","10111000110","10001110110","11101110110","11010001110","11000101110","11011101000","11011100010","11011101110","11101011000","11101000110","11100010110","11101101000","11101100010","11100011010","11101111010","11001000010","11110001010","10100110000","10100001100","10010110000","10010000110","10000101100","10000100110","10110010000","10110000100","10011010000","10011000010","10000110100","10000110010","11000010010","11001010000","11110111010","11000010100","10001111010","10100111100","10010111100","10010011110","10111100100","10011110100","10011110010","11110100100","11110010100","11110010010","11011011110","11011110110","11110110110","10101111000","10100011110","10001011110","10111101000","10111100010","11110101000","11110100010","10111011110","10111101110","11101011110","11110101110"],r=[],e=105;_.length%2!=0&&(_="0"+_);for(let o=0;o<_.length;o+=2){let t=parseInt(_.substring(o,o+2),10);r.push($[t]),e+=t*(o/2+1)}let n=e%103;return r.push($[n]),r.unshift("11010011100"),r.push("1100011101011"),r}let DEFAULT_CONFIG={startingPointX:10,startingPointY:5,barHeight:80,barWidth:2,barColor:"#111111",bgColor:"#ffffff",onRenderFailed:_=>console.error(_)},BarcodeErrorCodes={CANVAS_UNDEFINED:0,VALUE_INVALID:1,VALUE_LENGTH_INVALID:2,INTERNAL_ERROR:3};function renderBarcode128(_,$,r){if(!$||isNaN(Number($))){null!=r.onRenderFailed&&r.onRenderFailed(BarcodeErrorCodes.VALUE_INVALID);return}if($.length>254){null!=r.onRenderFailed&&r.onRenderFailed(BarcodeErrorCodes.VALUE_LENGTH_INVALID);return}if(!_){null!=r.onRenderFailed&&r.onRenderFailed(BarcodeErrorCodes.CANVAS_UNDEFINED);return}let e=_.getContext("2d");r=r||{};let o=void 0!==r.barWidth?r.barWidth:DEFAULT_CONFIG.barWidth,t=void 0!==r.barHeight?r.barHeight:DEFAULT_CONFIG.barHeight,n=void 0!==r.barColor?r.barColor:DEFAULT_CONFIG.barColor,d=void 0!==r.bgColor?r.bgColor:DEFAULT_CONFIG.bgColor;var i=void 0!==r.startingPointX?r.startingPointX:DEFAULT_CONFIG.startingPointX,a=void 0!==r.startingPointY?r.startingPointY:DEFAULT_CONFIG.startingPointY;try{let l=generateCode128CBarcode($);var C=i;for(let E=0;E<l.length;E++){let g=l[E];for(let F=0;F<g.length;F++){let N=g[F];e.fillStyle="1"===N?n:d,e.fillRect(C,a,o,t),C+=o}}}catch(s){console.error(s.message||s),r.onRenderFailed&&r.onRenderFailed(BarcodeErrorCodes.INTERNAL_ERROR)}}export{renderBarcode128,BarcodeErrorCodes};